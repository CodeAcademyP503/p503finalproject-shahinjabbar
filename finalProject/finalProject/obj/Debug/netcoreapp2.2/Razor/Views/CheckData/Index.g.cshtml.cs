#pragma checksum "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "84b22dbbb7cdfed6f462d62bb4512f3214a1871f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CheckData_Index), @"mvc.1.0.view", @"/Views/CheckData/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/CheckData/Index.cshtml", typeof(AspNetCore.Views_CheckData_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\acer\source\repos\finalProject\finalProject\Views\_ViewImports.cshtml"
using finalProject;

#line default
#line hidden
#line 2 "C:\Users\acer\source\repos\finalProject\finalProject\Views\_ViewImports.cshtml"
using finalProject.Models;

#line default
#line hidden
#line 3 "C:\Users\acer\source\repos\finalProject\finalProject\Views\_ViewImports.cshtml"
using finalProject.Models.ViewModels;

#line default
#line hidden
#line 5 "C:\Users\acer\source\repos\finalProject\finalProject\Views\_ViewImports.cshtml"
using System.Runtime.InteropServices.ComTypes;

#line default
#line hidden
#line 1 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
using Microsoft.AspNetCore.Identity.UI.V3.Pages.Account.Internal;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"84b22dbbb7cdfed6f462d62bb4512f3214a1871f", @"/Views/CheckData/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"05cbd9252d96ec989d7498d09845972fa604379e", @"/Views/_ViewImports.cshtml")]
    public class Views_CheckData_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<finalProject.Models.ViewModels.CheckDataViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/CustomLayout.cshtml";

#line default
#line hidden
            BeginContext(219, 86, true);
            WriteLiteral("\r\n<script>\r\n    let firstoptions;\r\n    let firstoptionlabeltext;\r\n    let hasoptions =");
            EndContext();
            BeginContext(306, 37, false);
#line 11 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
               Write(Model.HasOptions.ToString().ToLower());

#line default
#line hidden
            EndContext();
            BeginContext(343, 56, true);
            WriteLiteral(";\r\n    let secondoptions;\r\n    let hasSecondaryOptions =");
            EndContext();
            BeginContext(400, 46, false);
#line 13 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
                        Write(Model.HasSecondaryOptions.ToString().ToLower());

#line default
#line hidden
            EndContext();
            BeginContext(446, 62, true);
            WriteLiteral(";\r\n    let secondoptionlabeltext;\r\n    let hassecondaryinput =");
            EndContext();
            BeginContext(509, 44, false);
#line 15 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
                      Write(Model.HasSecondaryInput.ToString().ToLower());

#line default
#line hidden
            EndContext();
            BeginContext(553, 19, true);
            WriteLiteral(";\r\n    let langid= ");
            EndContext();
            BeginContext(573, 40, false);
#line 16 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
           Write(Html.Raw(@Json.Serialize(@Model.LangId)));

#line default
#line hidden
            EndContext();
            BeginContext(613, 30, true);
            WriteLiteral(";\r\n    let hasAdditionalInput=");
            EndContext();
            BeginContext(644, 45, false);
#line 17 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
                      Write(Model.HasAdditionalInput.ToString().ToLower());

#line default
#line hidden
            EndContext();
            BeginContext(689, 74, true);
            WriteLiteral(";\r\n    let secondaryinput;\r\n    let providerImg;\r\n    let providername =  ");
            EndContext();
            BeginContext(764, 45, false);
#line 20 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
                   Write(Html.Raw(Json.Serialize(@Model.ProviderName)));

#line default
#line hidden
            EndContext();
            BeginContext(809, 22, true);
            WriteLiteral(";\r\n    let provcat  = ");
            EndContext();
            BeginContext(832, 45, false);
#line 21 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
              Write(Html.Raw(Json.Serialize(@Model.CategoryName)));

#line default
#line hidden
            EndContext();
            BeginContext(877, 24, true);
            WriteLiteral(";\r\n    let continuetxt =");
            EndContext();
            BeginContext(902, 51, false);
#line 22 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
                Write(Html.Raw(Json.Serialize(@Model.ContinueButtonText)));

#line default
#line hidden
            EndContext();
            BeginContext(953, 24, true);
            WriteLiteral(";\r\n    let canceltcxt = ");
            EndContext();
            BeginContext(978, 49, false);
#line 23 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
                Write(Html.Raw(Json.Serialize(@Model.CancelButtonText)));

#line default
#line hidden
            EndContext();
            BeginContext(1027, 18, true);
            WriteLiteral(";\r\n    let coreId=");
            EndContext();
            BeginContext(1046, 47, false);
#line 24 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
          Write(Html.Raw(Json.Serialize(@Model.CoreProviderId)));

#line default
#line hidden
            EndContext();
            BeginContext(1093, 27, true);
            WriteLiteral(";\r\n    let providerImgPath=");
            EndContext();
            BeginContext(1121, 42, false);
#line 25 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
                   Write(Html.Raw(Json.Serialize(@Model.ImagePath)));

#line default
#line hidden
            EndContext();
            BeginContext(1163, 32, true);
            WriteLiteral(";\r\n    let providercategoryname=");
            EndContext();
            BeginContext(1196, 45, false);
#line 26 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
                        Write(Html.Raw(Json.Serialize(@Model.CategoryName)));

#line default
#line hidden
            EndContext();
            BeginContext(1241, 57, true);
            WriteLiteral(";\r\n    let additionalinput;\r\n    let input = JSON.parse(\'");
            EndContext();
            BeginContext(1299, 38, false);
#line 28 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
                       Write(Json.Serialize(@Model.FirstInputModel));

#line default
#line hidden
            EndContext();
            BeginContext(1337, 528, true);
            WriteLiteral(@"');
    function Create() {
        let container = CreateElement(""div"", ""container-fluid"", document.body);
        let firstRow = CreateElement(""div"", ""row"", container);
        let firstCol = CreateElement(""div"", ""col"", firstRow);
        let secondCol = CreateElement(""div"", ""col providerInfo"", firstRow);
        let thirdCol = CreateElement(""div"", ""col"", firstRow);
        let info = CreateElement(""div"", ""info"", secondCol);
        providerImg = CreateElement(""img"", ""infoimg"", info);
        providerImg.src = '");
            EndContext();
            BeginContext(1866, 21, false);
#line 37 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
                      Write(Url.Content("~/img/"));

#line default
#line hidden
            EndContext();
            BeginContext(1887, 361, true);
            WriteLiteral(@"' + providerImgPath;
        let secondRow = CreateElement(""div"", ""row"", container);
        let fourthCol = CreateElement(""div"", ""col"", secondRow);
        let fifthCol = CreateElement(""div"", ""col center"", secondRow);
        let sixthCol = CreateElement(""div"", ""col"", secondRow);
        if (hasoptions == true) {
            firstoptions = JSON.parse('");
            EndContext();
            BeginContext(2249, 35, false);
#line 43 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
                                  Write(Json.Serialize(@Model.FirstOptions));

#line default
#line hidden
            EndContext();
            BeginContext(2284, 52, true);
            WriteLiteral("\');\r\n            firstoptionlabeltext = JSON.parse(\'");
            EndContext();
            BeginContext(2337, 43, false);
#line 44 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
                                          Write(Json.Serialize(@Model.FirstOptionLabelText));

#line default
#line hidden
            EndContext();
            BeginContext(2380, 654, true);
            WriteLiteral(@"');
            console.log(firstoptions);
            let firstForm = CreateElement(""div"", ""test"", fifthCol);
            let formPart = CreateElement(""div"", ""form-group row"", firstForm);
            let formCol = CreateElement(""div"", ""col-lg-5"", formPart);
            let label = CreateElement(""label"", ""label"", formCol);
            label.innerHTML = firstoptionlabeltext;
            let div = CreateElement(""div"",""first"",formCol)
            let selectbox = CreateSelectBox("""", ""first"", div);
            CreateOptions(firstoptions, ""first"");
        }
        if (hasSecondaryOptions == true) {
            secondoptions = JSON.parse('");
            EndContext();
            BeginContext(3035, 36, false);
#line 56 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
                                   Write(Json.Serialize(@Model.SecondOptions));

#line default
#line hidden
            EndContext();
            BeginContext(3071, 51, true);
            WriteLiteral("\');\r\n            secondoptionlabeltext=JSON.parse(\'");
            EndContext();
            BeginContext(3123, 44, false);
#line 57 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
                                         Write(Json.Serialize(@Model.SecindOptionLabelText));

#line default
#line hidden
            EndContext();
            BeginContext(3167, 1099, true);
            WriteLiteral(@"');
            let secondForm = CreateElement(""div"", """", fifthCol);
            let formPart = CreateElement(""div"", ""form-group row"", secondForm);
            let formCol = CreateElement(""div"", ""col-lg-5"", formPart);
            let label = CreateElement(""label"", """", formCol);
            label.innerHTML =secondoptionlabeltext;
            let selectbox = CreateSelectBox("""", ""second"", formCol);
            CreateOptions(secondoptions, ""second"");
        }
        let label = CreateElement(""label"", ""lbl"", fifthCol);
        let labels = CreateElement(""label"", ""labels"", fifthCol);
        label.innerHTML = input.inputText;
        CreateInput(""text"", """", input.inputValidLength, ""number"", ""form-control w-100 "", fifthCol);
        let errorlabel = CreateElement(""h5"", ""error"", fifthCol);
        let errorlabel2 = CreateElement(""h5"", ""error2"", fifthCol);
        let errorlabel3 = CreateElement(""h5"", ""error3"", fifthCol);
        let errorlabel4 = CreateElement(""label"", ""error4"", fifthCol);
        ");
            WriteLiteral("if (hassecondaryinput == true) {\r\n            secondaryinput = JSON.parse(\'");
            EndContext();
            BeginContext(4267, 39, false);
#line 75 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
                                    Write(Json.Serialize(@Model.SecondInputModel));

#line default
#line hidden
            EndContext();
            BeginContext(4306, 405, true);
            WriteLiteral(@"');
            let label1 = CreateElement(""label"", """", fifthCol);
            label1.innerHTML = secondaryinput.inputText;
            CreateInput(""text"", """", secondaryinput.inputValidLength, ""numb"", ""form-control w-100"", fifthCol);
            let errorlabel1 = CreateElement(""h5"", ""error"", fifthCol);
        }
        if (hasAdditionalInput == true) {
            additionalinput = JSON.parse('");
            EndContext();
            BeginContext(4712, 43, false);
#line 82 "C:\Users\acer\source\repos\finalProject\finalProject\Views\CheckData\Index.cshtml"
                                     Write(Json.Serialize(@Model.AdditionalInputModel));

#line default
#line hidden
            EndContext();
            BeginContext(4755, 2365, true);
            WriteLiteral(@"');
            let label1 = CreateElement(""label"", """", fifthCol);
            label1.innerHTML = additionalinput.inputText;
            CreateInput(""text"", """", additionalinput.inputValidLength, ""number"", ""form-control w-100"", fifthCol);
            let errorlabel1 = CreateElement(""h5"", ""error"", fifthCol);
        }

        let hiddenInput = CreateElement(""input"", ""category"",document.body);
        hiddenInput.type = ""hidden"";
        hiddenInput.value = providercategoryname;
        let hiddenInput2 = CreateElement(""input"", ""lang"", document.body);
        hiddenInput2.type = ""hidden"";
        hiddenInput2.value = langid;
        let hiddenInput3 = CreateElement(""input"", ""providername"", document.body);
        hiddenInput3.type = ""hidden"";
        hiddenInput3.value = providername;
        let submitSection = CreateElement(""div"", ""sumbitSection"", fifthCol);
        let submit = CreateElement(""a"", ""btn btn-primary submit"", submitSection);
        submit.innerHTML = continuetxt;
        let ");
            WriteLiteral(@"home = CreateElement(""a"", ""btn btn-info home"", submitSection);
        home.innerHTML = canceltcxt;
        home.addEventListener(""click"", function() {
            window.history.back();
        })
    }

    Create();

    function CreateElement(tagName, className, parent) {
        let element = document.createElement(tagName);
        element.className = className;
        parent.appendChild(element);
        return element;
    }
    function CreateSelectBox(className, id, parent) {
        let selectbox = document.createElement(""select"");
        selectbox.className = className;
        selectbox.id = id;
        parent.appendChild(selectbox);
        return selectbox;
    }

    function CreateOptions(data, selectboxId, className) {
        for (let elem of data) {
            let parent = document.getElementById(selectboxId);
            let option = CreateElement(""option"", className, parent);
            option.innerHTML = elem;
        }
    }

    function CreateInput(");
            WriteLiteral(@"type, name, maxlength, id, className, parent) {
        let input = CreateElement(""input"", className, parent);
        input.id = id;
        input.setAttribute(""type"", type);
        input.setAttribute(""name"", name);
        input.setAttribute(""maxlength"", maxlength);
        return input;
    }
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<finalProject.Models.ViewModels.CheckDataViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
