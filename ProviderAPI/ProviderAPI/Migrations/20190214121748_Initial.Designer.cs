// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProviderAPI.Models.Context;

namespace ProviderAPI.Migrations
{
    [DbContext(typeof(APIDBContext))]
    [Migration("20190214121748_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProviderAPI.Models.Bank.AccessBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("CustomerId")
                        .IsRequired();

                    b.Property<string>("IdentityCardNumber")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("AccessBanks");
                });

            modelBuilder.Entity("ProviderAPI.Models.Bank.AtaBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("CustomerCode")
                        .IsRequired();

                    b.Property<string>("LoanAccountNumber")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("AtaBanks");
                });

            modelBuilder.Entity("ProviderAPI.Models.Bank.AzerTurkBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .IsRequired();

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("PinCode")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("AzerTurkBanks");
                });

            modelBuilder.Entity("ProviderAPI.Models.Bank.BankOfBaku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .IsRequired();

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("CardNumberId")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("BankOfBakus");
                });

            modelBuilder.Entity("ProviderAPI.Models.Bank.BankRespublika", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .IsRequired();

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("CardNumberId")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("BankRespublikas");
                });

            modelBuilder.Entity("ProviderAPI.Models.Bank.ExpressBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("CustomerId")
                        .IsRequired();

                    b.Property<string>("PinCode")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ExpressBanks");
                });

            modelBuilder.Entity("ProviderAPI.Models.Bank.Irshad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("CustomerCode")
                        .IsRequired();

                    b.Property<string>("PIN")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Irshads");
                });

            modelBuilder.Entity("ProviderAPI.Models.Bank.KapitalBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("CustomerCode")
                        .IsRequired();

                    b.Property<string>("DateOfBirth")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("KapitalBanks");
                });

            modelBuilder.Entity("ProviderAPI.Models.Bank.UniBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgreementNumber")
                        .IsRequired();

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("CardPinId")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("UniBanks");
                });

            modelBuilder.Entity("ProviderAPI.Models.Bank.XalqBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("LoanContractNumber")
                        .IsRequired();

                    b.Property<string>("PinCodeSerialNumber")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("XalqBanks");
                });

            modelBuilder.Entity("ProviderAPI.Models.E_Wallet.AzerPay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<int>("PrefixId");

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("PrefixId");

                    b.ToTable("AzerPays");
                });

            modelBuilder.Entity("ProviderAPI.Models.E_Wallet.PortManat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<int>("PrefixId");

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("PrefixId");

                    b.ToTable("PortManats");
                });

            modelBuilder.Entity("ProviderAPI.Models.Entertainment.DrWeb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("EntertainmentPrefixId");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("EntertainmentPrefixId");

                    b.ToTable("DrWebs");
                });

            modelBuilder.Entity("ProviderAPI.Models.Entertainment.EntertainmentPrefix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LangConfigId");

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("LangConfigId");

                    b.ToTable("EntertainmentPrefixes");
                });

            modelBuilder.Entity("ProviderAPI.Models.Entertainment.Eset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("EntertainmentPrefixId");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("EntertainmentPrefixId");

                    b.ToTable("Esets");
                });

            modelBuilder.Entity("ProviderAPI.Models.Entertainment.Kaspersky", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("EntertainmentPrefixId");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("EntertainmentPrefixId");

                    b.ToTable("Kasperskies");
                });

            modelBuilder.Entity("ProviderAPI.Models.Internet.Avirtel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Avirtels");
                });

            modelBuilder.Entity("ProviderAPI.Models.Internet.AzerOnline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("AzerOnlines");
                });

            modelBuilder.Entity("ProviderAPI.Models.Internet.AzeuroTel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("AzeuroTels");
                });

            modelBuilder.Entity("ProviderAPI.Models.Internet.Azincom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Azincoms");
                });

            modelBuilder.Entity("ProviderAPI.Models.LanguageConfiguration.LangConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LangName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("LangConfigs");
                });

            modelBuilder.Entity("ProviderAPI.Models.Mobile.Azercell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<int>("PrefixId");

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("PrefixId");

                    b.ToTable("Azercells");
                });

            modelBuilder.Entity("ProviderAPI.Models.Mobile.Bakcell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<int>("PrefixId");

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("PrefixId");

                    b.ToTable("Bakcells");
                });

            modelBuilder.Entity("ProviderAPI.Models.Mobile.Nar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<int>("PrefixId");

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("PrefixId");

                    b.ToTable("Nars");
                });

            modelBuilder.Entity("ProviderAPI.Models.Mobile.Naxtel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<int>("PrefixId");

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("PrefixId");

                    b.ToTable("Naxtels");
                });

            modelBuilder.Entity("ProviderAPI.Models.Mobile.Prefix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LangConfigId");

                    b.Property<string>("PrefixValue")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("LangConfigId");

                    b.ToTable("Prefix");
                });

            modelBuilder.Entity("ProviderAPI.Models.Phone.AzeuroTelPhone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("AzeuroTelPhones");
                });

            modelBuilder.Entity("ProviderAPI.Models.Phone.Catel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Catels");
                });

            modelBuilder.Entity("ProviderAPI.Models.State.VN", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("ServiceType")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.Property<int>("UtilityPrefixId");

                    b.Property<string>("VOEN")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UtilityPrefixId");

                    b.ToTable("Vns");
                });

            modelBuilder.Entity("ProviderAPI.Models.TV.AlfanetTv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("AlfanetTvs");
                });

            modelBuilder.Entity("ProviderAPI.Models.TV.ClipTv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<string>("User")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ClipTvs");
                });

            modelBuilder.Entity("ProviderAPI.Models.Utility.AzerIshiq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AbonentCode")
                        .IsRequired();

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("User")
                        .IsRequired();

                    b.Property<int>("UtilityPrefixId");

                    b.HasKey("Id");

                    b.HasIndex("UtilityPrefixId");

                    b.ToTable("AzerIshiqs");
                });

            modelBuilder.Entity("ProviderAPI.Models.Utility.AzerSu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AbonentCode")
                        .IsRequired();

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("User")
                        .IsRequired();

                    b.Property<int>("UtilityPrefixId");

                    b.HasKey("Id");

                    b.HasIndex("UtilityPrefixId");

                    b.ToTable("AzerSus");
                });

            modelBuilder.Entity("ProviderAPI.Models.Utility.AzeriQaz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AbonentCode")
                        .IsRequired();

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("User")
                        .IsRequired();

                    b.Property<int>("UtilityPrefixId");

                    b.HasKey("Id");

                    b.HasIndex("UtilityPrefixId");

                    b.ToTable("AzeriQazes");
                });

            modelBuilder.Entity("ProviderAPI.Models.Utility.UtilityPrefix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LangConfigId");

                    b.Property<string>("PrefixValue")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("LangConfigId");

                    b.ToTable("UtilityPrefixes");
                });

            modelBuilder.Entity("ProviderAPI.Models.E_Wallet.AzerPay", b =>
                {
                    b.HasOne("ProviderAPI.Models.Mobile.Prefix", "Prefix")
                        .WithMany()
                        .HasForeignKey("PrefixId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProviderAPI.Models.E_Wallet.PortManat", b =>
                {
                    b.HasOne("ProviderAPI.Models.Mobile.Prefix", "Prefix")
                        .WithMany()
                        .HasForeignKey("PrefixId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProviderAPI.Models.Entertainment.DrWeb", b =>
                {
                    b.HasOne("ProviderAPI.Models.Entertainment.EntertainmentPrefix", "EntertainmentPrefix")
                        .WithMany()
                        .HasForeignKey("EntertainmentPrefixId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProviderAPI.Models.Entertainment.EntertainmentPrefix", b =>
                {
                    b.HasOne("ProviderAPI.Models.LanguageConfiguration.LangConfig", "LangConfig")
                        .WithMany()
                        .HasForeignKey("LangConfigId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProviderAPI.Models.Entertainment.Eset", b =>
                {
                    b.HasOne("ProviderAPI.Models.Entertainment.EntertainmentPrefix", "EntertainmentPrefix")
                        .WithMany()
                        .HasForeignKey("EntertainmentPrefixId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProviderAPI.Models.Entertainment.Kaspersky", b =>
                {
                    b.HasOne("ProviderAPI.Models.Entertainment.EntertainmentPrefix", "EntertainmentPrefix")
                        .WithMany()
                        .HasForeignKey("EntertainmentPrefixId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProviderAPI.Models.Mobile.Azercell", b =>
                {
                    b.HasOne("ProviderAPI.Models.Mobile.Prefix", "Prefix")
                        .WithMany()
                        .HasForeignKey("PrefixId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProviderAPI.Models.Mobile.Bakcell", b =>
                {
                    b.HasOne("ProviderAPI.Models.Mobile.Prefix", "Prefix")
                        .WithMany()
                        .HasForeignKey("PrefixId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProviderAPI.Models.Mobile.Nar", b =>
                {
                    b.HasOne("ProviderAPI.Models.Mobile.Prefix", "Prefix")
                        .WithMany()
                        .HasForeignKey("PrefixId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProviderAPI.Models.Mobile.Naxtel", b =>
                {
                    b.HasOne("ProviderAPI.Models.Mobile.Prefix", "Prefix")
                        .WithMany()
                        .HasForeignKey("PrefixId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProviderAPI.Models.Mobile.Prefix", b =>
                {
                    b.HasOne("ProviderAPI.Models.LanguageConfiguration.LangConfig", "LangConfig")
                        .WithMany()
                        .HasForeignKey("LangConfigId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProviderAPI.Models.State.VN", b =>
                {
                    b.HasOne("ProviderAPI.Models.Utility.UtilityPrefix", "UtilityPrefix")
                        .WithMany()
                        .HasForeignKey("UtilityPrefixId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProviderAPI.Models.Utility.AzerIshiq", b =>
                {
                    b.HasOne("ProviderAPI.Models.Utility.UtilityPrefix", "UtilityPrefix")
                        .WithMany()
                        .HasForeignKey("UtilityPrefixId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProviderAPI.Models.Utility.AzerSu", b =>
                {
                    b.HasOne("ProviderAPI.Models.Utility.UtilityPrefix", "UtilityPrefix")
                        .WithMany()
                        .HasForeignKey("UtilityPrefixId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProviderAPI.Models.Utility.AzeriQaz", b =>
                {
                    b.HasOne("ProviderAPI.Models.Utility.UtilityPrefix", "UtilityPrefix")
                        .WithMany()
                        .HasForeignKey("UtilityPrefixId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProviderAPI.Models.Utility.UtilityPrefix", b =>
                {
                    b.HasOne("ProviderAPI.Models.LanguageConfiguration.LangConfig", "LangConfig")
                        .WithMany()
                        .HasForeignKey("LangConfigId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
